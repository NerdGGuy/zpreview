name: 'PR Management'
description: 'Manages pull requests for content changes'

inputs:
  github-token:
    description: 'GitHub token for API access'
    required: true
  branch-name:
    description: 'Branch name for the PR'
    required: true
  issue-number:
    description: 'Issue number related to the PR'
    required: true
  issue-title:
    description: 'Title of the related issue'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check for existing PR and update or create new one
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        BRANCH_NAME: ${{ inputs.branch-name }}
        ISSUE_NUMBER: ${{ inputs.issue-number }}
        ISSUE_TITLE: ${{ inputs.issue-title }}
      run: |
        PR_TITLE="Grant Application: ${ISSUE_TITLE}"
        PR_BODY="This PR was automatically generated to save the grant application from issue #${ISSUE_NUMBER}.

        ## Changes
        - Created/Updated grant application markdown file
        - Application is now ready for ZCG review

        [View original issue #${ISSUE_NUMBER}](https://github.com/${GITHUB_REPOSITORY}/issues/${ISSUE_NUMBER})"
        
        # Setup git config
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        # Create or update branch
        git checkout -b "${BRANCH_NAME}" 2>/dev/null || git checkout "${BRANCH_NAME}"
        git add _grants/
        git commit -m "Save grant application #${ISSUE_NUMBER}"
        git push -f origin "${BRANCH_NAME}"

        # Check for existing PR
        EXISTING_PR=$(gh pr list --head "${BRANCH_NAME}" --json number --jq '.[0].number')
        
        if [ -n "$EXISTING_PR" ]; then
          echo "Existing PR found: #$EXISTING_PR"
          echo "::set-output name=pr_number::$EXISTING_PR"
        else
          echo "Creating new PR"
          PR_NUM=$(gh pr create \
            --title "$PR_TITLE" \
            --body "$PR_BODY" \
            --base main \
            --head "${BRANCH_NAME}" \
            --json number --jq '.number')
          echo "::set-output name=pr_number::$PR_NUM"
        fi
