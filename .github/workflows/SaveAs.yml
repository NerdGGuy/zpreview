name: Issue SaveAs Workflow
on:
  issues:
    types: [edited, labeled]

jobs:
  save-issue-content:
    runs-on: ubuntu-latest
    if: |
      (github.event.action == 'labeled' && github.event.label.name == 'SaveAs') ||
      (github.event.action == 'edited' && contains(github.event.issue.labels.*.name, 'SaveAs'))
    
    permissions:
      issues: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Git
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          
      - name: Create branch
        run: |
          BRANCH_NAME="issue-${{ github.event.issue.number }}"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Save issue content
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          mkdir -p docs
          
          FILENAME=$(echo "100$ISSUE_NUMBER-$ISSUE_TITLE" | tr ' ' '-' | tr -cd '[:alnum:]-' | tr '[:upper:]' '[:lower:]').md
          
          cat > "_grants/$FILENAME" << EOL
          ---
          title: "$ISSUE_TITLE"
          issue_number: $ISSUE_NUMBER
          created_at: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
          author: "${{ github.event.issue.user.login }}"
          protected: true
          ---

          $ISSUE_BODY
          EOL
          
      - name: Commit and push changes
        run: |
          git add _grants/
          git commit -m "Save content from issue #${{ github.event.issue.number }}"
          git push -f origin $BRANCH_NAME
          
      - name: Check for existing PR and update or create new one
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_TITLE="Save content from issue #${{ github.event.issue.number }}"
          PR_BODY="This PR was automatically generated to save content from issue #${{ github.event.issue.number }} - ${{ github.event.issue.title }}"
          
          # Check for existing PR
          EXISTING_PR=$(gh pr list --head "issue-${{ github.event.issue.number }}" --json number --jq '.[0].number')
          
          if [ -n "$EXISTING_PR" ]; then
            echo "Existing PR found: #$EXISTING_PR"
            git push -f origin $BRANCH_NAME
          else
            echo "Creating new PR"
            gh pr create \
              --title "$PR_TITLE" \
              --body "$PR_BODY" \
              --base main \
              --head $BRANCH_NAME
          fi

      - name: Apply Protection Labels and Notice
        if: github.event.action == 'labeled' && github.event.label.name == 'SaveAs'
        uses: actions/github-script@v7
        with:
          script: |
            // Check if content-protected label already exists
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            const hasProtectionLabel = issue.data.labels.some(label => 
              label.name === 'content-protected'
            );
            
            if (!hasProtectionLabel) {
              // Add protection labels
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['content-protected']
              });

              // Create protection notice with instructions
              const protectionMessage = `# üîí Content Protection Notice

              This issue's content has been saved and is now protected. A snapshot has been created in PR #${context.issue.number}.

              ## What this means:
              - The original content is preserved in the repository
              - While the content can still be edited, changes will be monitored
              - Each edit will trigger a new snapshot PR
              
              ## To make changes:
              1. Edit the issue content as needed
              2. A new PR will automatically be created with your changes
              3. Maintainers will review the changes

              üí¨ Comments remain open for discussion.
              
              If you need to make substantial changes, please discuss with maintainers first.`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: protectionMessage
              });
            }

      - name: Monitor for Changes
        if: github.event.action == 'edited'
        uses: actions/github-script@v7
        with:
          script: |
            const changeNotice = `## ‚ö†Ô∏è Content Change Detected

            The protected content of this issue has been modified.
            - The existing snapshot PR has been updated
            - Maintainers will review these changes
            
            @${{ github.repository_owner }} Please review these changes.`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: changeNotice
            });
